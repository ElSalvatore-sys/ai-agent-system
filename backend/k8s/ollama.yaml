apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ollama-models-pvc
  namespace: llm-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
  storageClassName: fast-ssd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama
  namespace: llm-system
  labels:
    app: ollama
    component: local-llm
spec:
  replicas: 1
  strategy:
    type: Recreate  # Ollama doesn't support rolling updates with GPU
  selector:
    matchLabels:
      app: ollama
  template:
    metadata:
      labels:
        app: ollama
        component: local-llm
    spec:
      nodeSelector:
        nvidia.com/gpu.present: "true"  # Schedule on GPU nodes
      containers:
      - name: ollama
        image: ollama/ollama:latest
        ports:
        - containerPort: 11434
          name: http
        env:
        - name: OLLAMA_HOST
          value: "0.0.0.0"
        - name: OLLAMA_ORIGINS
          value: "*"
        - name: OLLAMA_MODELS
          value: "/root/.ollama/models"
        - name: OLLAMA_KEEP_ALIVE
          value: "24h"
        - name: OLLAMA_MAX_LOADED_MODELS
          value: "3"
        - name: OLLAMA_NUM_PARALLEL
          value: "2"
        resources:
          requests:
            cpu: 2
            memory: 4Gi
            nvidia.com/gpu: 1
          limits:
            cpu: 8
            memory: 16Gi
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /api/tags
            port: 11434
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/tags
            port: 11434
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: ollama-models
          mountPath: /root/.ollama
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: ollama-models
        persistentVolumeClaim:
          claimName: ollama-models-pvc
      - name: tmp
        emptyDir:
          sizeLimit: 10Gi
      securityContext:
        runAsUser: 0  # Ollama requires root for GPU access
        fsGroup: 0
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
---
apiVersion: v1
kind: Service
metadata:
  name: ollama-service
  namespace: llm-system
  labels:
    app: ollama
    component: local-llm
spec:
  type: ClusterIP
  ports:
  - port: 11434
    targetPort: 11434
    protocol: TCP
    name: http
  selector:
    app: ollama
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ollama-model-preload
  namespace: llm-system
spec:
  template:
    spec:
      restartPolicy: OnFailure
      initContainers:
      - name: wait-for-ollama
        image: curlimages/curl:latest
        command:
        - sh
        - -c
        - |
          until curl -f http://ollama-service:11434/api/tags; do
            echo "Waiting for Ollama service..."
            sleep 10
          done
          echo "Ollama is ready!"
      containers:
      - name: model-preloader
        image: curlimages/curl:latest
        command:
        - sh
        - -c
        - |
          echo "Preloading essential models..."
          
          # Pull Llama 2 7B
          curl -X POST http://ollama-service:11434/api/pull \
            -H "Content-Type: application/json" \
            -d '{"name": "llama2:7b"}'
          
          # Pull Code Llama 7B
          curl -X POST http://ollama-service:11434/api/pull \
            -H "Content-Type: application/json" \
            -d '{"name": "codellama:7b"}'
          
          # Pull Mistral 7B
          curl -X POST http://ollama-service:11434/api/pull \
            -H "Content-Type: application/json" \
            -d '{"name": "mistral:7b"}'
          
          echo "Model preloading completed!"
      backoffLimit: 3
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ollama-hpa
  namespace: llm-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ollama
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300  # 5 minutes
      policies:
      - type: Pods
        value: 1
        periodSeconds: 300
    scaleDown:
      stabilizationWindowSeconds: 600  # 10 minutes
      policies:
      - type: Pods
        value: 1
        periodSeconds: 600