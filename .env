# =======================================================
# AI AGENT SYSTEM - ENVIRONMENT CONFIGURATION
# =======================================================

# ENVIRONMENT SETTINGS
# =======================================================
ENVIRONMENT=development
DEBUG=true
SECRET_KEY=your-super-secret-key-change-in-production-min-32-chars

# DATABASE CONFIGURATION
# =======================================================
# PostgreSQL Database
POSTGRES_DB=ai_agent_system
POSTGRES_USER=postgres
POSTGRES_PASSWORD=ai_agent_password
DATABASE_URL=postgresql://postgres:ai_agent_password@localhost:5432/ai_agent_system

# Development Database (override for dev)
POSTGRES_DB_DEV=ai_agent_system_dev
POSTGRES_PASSWORD_DEV=dev_password

# REDIS CONFIGURATION
# =======================================================
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=
REDIS_DB=0

# AI MODEL API KEYS
# =======================================================
# OpenAI Configuration
OPENAI_API_KEY=your-openai-api-key-here
OPENAI_ORG_ID=your-openai-org-id-here

# Anthropic Claude Configuration
ANTHROPIC_API_KEY=your-anthropic-api-key-here

# Google Gemini Configuration  
GOOGLE_API_KEY=your-google-api-key-here
GOOGLE_PROJECT_ID=your-google-project-id

# Hugging Face Configuration
HUGGINGFACE_API_KEY=your-huggingface-api-key-here

# LOCAL LLM CONFIGURATION
# =======================================================
# Ollama Configuration
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_API_KEY=
OLLAMA_DEFAULT_MODEL=llama2
OLLAMA_MODELS_PATH=/usr/share/ollama/.ollama/models

# GPU Configuration
CUDA_VISIBLE_DEVICES=0
OLLAMA_NUM_PARALLEL=1
OLLAMA_MAX_LOADED_MODELS=1

# CORS AND SECURITY
# =======================================================
CORS_ORIGINS=["http://localhost:3000","http://127.0.0.1:3000","http://localhost:5173"]
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# MONITORING AND LOGGING
# =======================================================
# Grafana Configuration
GRAFANA_PASSWORD=admin
GRAFANA_USER=admin

# Prometheus Configuration
PROMETHEUS_RETENTION_TIME=200h

# Log Levels (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO
STRUCTURED_LOGGING=true

# PERFORMANCE SETTINGS
# =======================================================
# API Rate Limiting
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_PER_HOUR=1000

# Connection Pool Settings
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=30
DATABASE_POOL_TIMEOUT=30

# Redis Connection Pool
REDIS_POOL_SIZE=10
REDIS_POOL_TIMEOUT=20

# COST TRACKING AND OPTIMIZATION
# =======================================================
# Cost Management
MAX_DAILY_COST_USD=100.00
COST_ALERT_THRESHOLD_USD=50.00
ENABLE_COST_TRACKING=true

# Model Selection Strategy (cost_optimized, performance_optimized, balanced)
MODEL_SELECTION_STRATEGY=balanced

# LOCAL LLM FALLBACK SETTINGS
ENABLE_LOCAL_FALLBACK=true
LOCAL_FALLBACK_THRESHOLD_USD=10.00

# FILE UPLOAD AND STORAGE
# =======================================================
MAX_FILE_SIZE_MB=100
UPLOAD_PATH=/app/uploads
ALLOWED_FILE_TYPES=["txt","pdf","docx","csv","json","py","js","ts","md"]

# WEBSOCKET CONFIGURATION
# =======================================================
WEBSOCKET_TIMEOUT=300
WEBSOCKET_HEARTBEAT_INTERVAL=30
MAX_WEBSOCKET_CONNECTIONS=100

# CELERY BACKGROUND TASKS
# =======================================================
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/2
CELERY_TASK_ALWAYS_EAGER=false

# DOCKER AND CONTAINER SETTINGS
# =======================================================
# Docker Configuration for Model Management
DOCKER_HOST=unix:///var/run/docker.sock
ENABLE_DOCKER_MANAGEMENT=true

# Resource Limits
MAX_MEMORY_USAGE_GB=8
MAX_CPU_CORES=4

# DEVELOPMENT SETTINGS
# =======================================================
# Only set these in development
RELOAD=true
DEBUG_TOOLBAR=true
PROFILING_ENABLED=false

# Test Database
TEST_DATABASE_URL=sqlite:///./test.db

# PRODUCTION OVERRIDES
# =======================================================
# Uncomment and modify for production deployment
# ENVIRONMENT=production
# DEBUG=false
# SECRET_KEY=your-production-secret-key-min-64-chars-very-secure
# DATABASE_URL=postgresql://prod_user:secure_password@prod_db:5432/ai_agent_prod
# REDIS_URL=redis://:secure_redis_password@prod_redis:6379
# CORS_ORIGINS=["https://yourdomain.com","https://www.yourdomain.com"]

# HEALTH CHECK ENDPOINTS
# =======================================================
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_RETRIES=3

# INTEGRATION TEST SETTINGS
# =======================================================
RUN_INTEGRATION_TESTS=true
TEST_TIMEOUT_SECONDS=60
SKIP_SLOW_TESTS=false
TEST_OLLAMA_MODELS=["llama2:7b","codellama:7b"]

# =======================================================
# NOTES:
# 1. Copy this file to .env and fill in your actual values
# 2. Never commit .env files to version control
# 3. Generate strong SECRET_KEY using: openssl rand -hex 32
# 4. For production, use strong passwords and secure API keys
# 5. Set ENVIRONMENT=production for production deployments
# =======================================================